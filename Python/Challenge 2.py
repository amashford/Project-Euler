# Challenge 2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even valued terms.

# Function to iteratively generate the fibonacci sequence
def fibonacci(n):

    fib_nums = list(range(n))
    
    for i in range(1, n+1):

        if(i == 1):

            fib_nums[i-1] = 1

        elif(i == 2):

            fib_nums[i-1] = 2

        else:
            
            fib_nums[i-1] = fib_nums[i-2] + fib_nums[i-3]

    return fib_nums

# Generate fibonacci terms below 4 million
fibonacci(32)

# Result var
result = 0

# Sum all even terms
for x in fibonacci(32):

    if(x % 2 == 0):

        result += x 

        print(result)
        
# Result is 4,613,732
